Parameters:
  apigatewayname:
    Type: String
    Default: flume
    Description: Provide API Gateway Name
  s3bucketname:
    Type: String
    Default: flume
    Description: Existing S3 Bucket Name
Resources:
  secret4DA88516:
    Type: AWS::SecretsManager::Secret
    Properties:
      SecretString: '{"verify":"<VERIFY>"}'
      Tags:
        - Key: GitHub
          Value: https://github.com/jblukach/flume
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  roleC7B7E775:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Tags:
        - Key: GitHub
          Value: https://github.com/jblukach/flume
  roleDefaultPolicy7C980EBA:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:PutObject
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:s3:::"
                  - Ref: s3bucketname
                  - /*
          - Action: apigateway:POST
            Effect: Allow
            Resource: "*"
          - Action:
              - secretsmanager:DescribeSecret
              - secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              Ref: secret4DA88516
        Version: "2012-10-17"
      PolicyName: roleDefaultPolicy7C980EBA
      Roles:
        - Ref: roleC7B7E775
  apirole85D7B7F5:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
      Tags:
        - Key: GitHub
          Value: https://github.com/jblukach/flume
  flume9B71057B:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - arm64
      Code:
        ZipFile: |-
          import boto3
          import datetime
          import gzip
          import json
          import os
          import uuid

          def handler(event, context):

              print(event)

              secretmgr = boto3.client('secretsmanager')

              secret = secretmgr.get_secret_value(
                  SecretId = os.environ['SECRET']
              )

              verify = json.loads(secret['SecretString'])

              try:

                  if event['queryStringParameters']['verify'] == verify['verify']:

                      uniq = str(uuid.uuid4())

                      with gzip.open('/tmp/'+uniq+'.json.gz', 'wb') as g:
                          g.write((str(event)+str('\n')).encode())
                      g.close()

                      year = datetime.datetime.now().year
                      month = datetime.datetime.now().month
                      day = datetime.datetime.now().day
                      hour = datetime.datetime.now().hour

                      s3 = boto3.client('s3')

                      bucket = os.environ['BUCKET']
                      prefix = os.environ['PREFIX']
                      key = f'{prefix}/year={year}/month={month}/day={day}/hour={hour}/{uniq}.json.gz'

                      s3.upload_file('/tmp/'+uniq+'.json.gz', bucket, key)

                      code = 200
                      msg = 'Shipped: '+key

                  else:

                      code = 404
                      msg = 'Where the Internet Ends'

              except:
                  
                  code = 404
                  msg = 'Where the Internet Ends'

              return {
                  'statusCode': code,
                  'body': json.dumps(msg)
              }
      Environment:
        Variables:
          BUCKET:
            Ref: s3bucketname
          PREFIX: logs
          SECRET:
            Ref: secret4DA88516
      Handler: index.handler
      MemorySize: 128
      Role:
        Fn::GetAtt:
          - roleC7B7E775
          - Arn
      Runtime: python3.13
      Tags:
        - Key: GitHub
          Value: https://github.com/jblukach/flume
      Timeout: 30
    DependsOn:
      - roleDefaultPolicy7C980EBA
      - roleC7B7E775
  logs0B6081B1:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: flume9B71057B
      RetentionInDays: 14
      Tags:
        - Key: GitHub
          Value: https://github.com/jblukach/flume
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  apilogs9C0A78C8:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      Tags:
        - Key: GitHub
          Value: https://github.com/jblukach/flume
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  apiC8550315:
    Type: AWS::ApiGateway::RestApi
    Properties:
      EndpointConfiguration:
        Types:
          - REGIONAL
      Name:
        Ref: apigatewayname
      Tags:
        - Key: GitHub
          Value: https://github.com/jblukach/flume
  apiDeployment149F129487cdf7c624a1ffa559a8eeb5bb4e2d4f:
    Type: AWS::ApiGateway::Deployment
    Properties:
      Description: Automatically created by the RestApi construct
      RestApiId:
        Ref: apiC8550315
    DependsOn:
      - apiingestPOSTE30E20E6
      - apiingest6BBF5555
  apiDeploymentStageprod896C8101:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId:
        Ref: apiDeployment149F129487cdf7c624a1ffa559a8eeb5bb4e2d4f
      MethodSettings:
        - DataTraceEnabled: false
          HttpMethod: "*"
          ResourcePath: /*
          ThrottlingBurstLimit: 5000
          ThrottlingRateLimit: 10000
      RestApiId:
        Ref: apiC8550315
      StageName: prod
      Tags:
        - Key: GitHub
          Value: https://github.com/jblukach/flume
  apiingest6BBF5555:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - apiC8550315
          - RootResourceId
      PathPart: ingest
      RestApiId:
        Ref: apiC8550315
  apiingestPOSTApiPermissionFlumeStackapiA7D583D9POSTingestAEEC0355:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - flume9B71057B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:us-east-1:"
            - Ref: AWS::AccountId
            - ":"
            - Ref: apiC8550315
            - /
            - Ref: apiDeploymentStageprod896C8101
            - /POST/ingest
  apiingestPOSTApiPermissionTestFlumeStackapiA7D583D9POSTingest2600D5C6:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - flume9B71057B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:us-east-1:"
            - Ref: AWS::AccountId
            - ":"
            - Ref: apiC8550315
            - /test-invoke-stage/POST/ingest
  apiingestPOSTE30E20E6:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            StatusCode: "200"
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - flume9B71057B
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "200"
      ResourceId:
        Ref: apiingest6BBF5555
      RestApiId:
        Ref: apiC8550315
Outputs:
  apiEndpoint9349E63C:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: apiC8550315
          - .execute-api.us-east-1.
          - Ref: AWS::URLSuffix
          - /
          - Ref: apiDeploymentStageprod896C8101
          - /

